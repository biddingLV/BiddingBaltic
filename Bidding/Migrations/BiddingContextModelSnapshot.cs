// <auto-generated />
using System;
using Bidding.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bidding.Migrations
{
    [DbContext(typeof(BiddingContext))]
    partial class BiddingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Auction", b =>
                {
                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplyTillDate");

                    b.Property<int>("AuctionCategoryId");

                    b.Property<int>("AuctionStatusId");

                    b.Property<int>("AuctionTypeId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("StartingPrice");

                    b.HasKey("AuctionId");

                    b.HasIndex("AuctionCategoryId");

                    b.HasIndex("AuctionStatusId");

                    b.HasIndex("AuctionTypeId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Auctions");

                    b.HasData(
                        new
                        {
                            AuctionId = 1,
                            ApplyTillDate = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuctionCategoryId = 1,
                            AuctionStatusId = 1,
                            AuctionTypeId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            EndDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Tesla Model 3",
                            StartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartingPrice = 15000
                        },
                        new
                        {
                            AuctionId = 2,
                            ApplyTillDate = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuctionCategoryId = 3,
                            AuctionStatusId = 1,
                            AuctionTypeId = 13,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            EndDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Penthouse tipa dzīvoklis Vecrīgas sirdī",
                            StartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartingPrice = 50000
                        },
                        new
                        {
                            AuctionId = 3,
                            ApplyTillDate = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuctionCategoryId = 2,
                            AuctionStatusId = 1,
                            AuctionTypeId = 12,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            EndDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Vīna skapis",
                            StartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartingPrice = 900
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionCondition", b =>
                {
                    b.Property<int>("AuctionConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AuctionConditionId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("AuctionConditions");

                    b.HasData(
                        new
                        {
                            AuctionConditionId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Lietota"
                        },
                        new
                        {
                            AuctionConditionId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Jauna"
                        },
                        new
                        {
                            AuctionConditionId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Apdzīvots"
                        },
                        new
                        {
                            AuctionConditionId = 4,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Neapdzīvots"
                        },
                        new
                        {
                            AuctionConditionId = 5,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Nepieciešams remonts"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionFormat", b =>
                {
                    b.Property<int>("AuctionFormatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AuctionFormatId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("AuctionFormats");

                    b.HasData(
                        new
                        {
                            AuctionFormatId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Cenu aptauja"
                        },
                        new
                        {
                            AuctionFormatId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Izsole elektroniski"
                        },
                        new
                        {
                            AuctionFormatId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Izsole klātienē"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionItem", b =>
                {
                    b.Property<int>("AuctionItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionId");

                    b.Property<int>("AuctionItemCategoryId");

                    b.Property<int>("AuctionItemTypeId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AuctionItemId");

                    b.HasIndex("AuctionId");

                    b.HasIndex("AuctionItemCategoryId");

                    b.HasIndex("AuctionItemTypeId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("AuctionItems");

                    b.HasData(
                        new
                        {
                            AuctionItemId = 1,
                            AuctionId = 1,
                            AuctionItemCategoryId = 1,
                            AuctionItemTypeId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Tesla Model 3"
                        },
                        new
                        {
                            AuctionItemId = 2,
                            AuctionId = 2,
                            AuctionItemCategoryId = 3,
                            AuctionItemTypeId = 13,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Penthouse tipa dzīvoklis Vecrīgas sirdī"
                        },
                        new
                        {
                            AuctionItemId = 3,
                            AuctionId = 3,
                            AuctionItemCategoryId = 2,
                            AuctionItemTypeId = 12,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Vīna skapis"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionStatus", b =>
                {
                    b.Property<int>("AuctionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AuctionStatusId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("AuctionStatuses");

                    b.HasData(
                        new
                        {
                            AuctionStatusId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Aktīva"
                        },
                        new
                        {
                            AuctionStatusId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Pārtraukta"
                        },
                        new
                        {
                            AuctionStatusId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Beigusies"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Details.ItemAuctionDetails", b =>
                {
                    b.Property<int>("ItemAuctionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionItemId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Evaluation");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<DateTime>("ManufacturingDate");

                    b.Property<string>("Model");

                    b.Property<int?>("UserId");

                    b.HasKey("ItemAuctionDetailsId");

                    b.HasIndex("AuctionItemId");

                    b.HasIndex("UserId");

                    b.ToTable("ItemAuctionDetails");

                    b.HasData(
                        new
                        {
                            ItemAuctionDetailsId = 1,
                            AuctionItemId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            Evaluation = "In progress",
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            ManufacturingDate = new DateTime(2019, 6, 10, 14, 5, 4, 699, DateTimeKind.Utc).AddTicks(5804),
                            Model = "In progress"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Details.PropertyAuctionDetails", b =>
                {
                    b.Property<int>("PropertyAuctionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionItemId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<int?>("UserId");

                    b.HasKey("PropertyAuctionDetailsId");

                    b.HasIndex("AuctionItemId");

                    b.HasIndex("UserId");

                    b.ToTable("PropertyAuctionDetails");

                    b.HasData(
                        new
                        {
                            PropertyAuctionDetailsId = 1,
                            AuctionItemId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Details.VehicleAuctionDetails", b =>
                {
                    b.Property<int>("VehicleAuctionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionItemId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<string>("EngineSize");

                    b.Property<string>("Evaluation");

                    b.Property<string>("FuelType");

                    b.Property<string>("Gearbox");

                    b.Property<string>("IdentificationNumber")
                        .HasMaxLength(50);

                    b.Property<bool>("InspectionActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Make");

                    b.Property<DateTime>("ManufacturingDate");

                    b.Property<string>("Model");

                    b.Property<string>("Power");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(50);

                    b.Property<string>("Transmission");

                    b.Property<int?>("UserId");

                    b.HasKey("VehicleAuctionDetailsId");

                    b.HasIndex("AuctionItemId");

                    b.HasIndex("UserId");

                    b.ToTable("VehicleAuctionDetails");

                    b.HasData(
                        new
                        {
                            VehicleAuctionDetailsId = 1,
                            AuctionItemId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            Evaluation = "In progress",
                            InspectionActive = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Make = "In progress",
                            ManufacturingDate = new DateTime(2019, 6, 10, 14, 5, 4, 701, DateTimeKind.Utc).AddTicks(977),
                            Model = "In progress"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Users.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("UserId");

                    b.HasKey("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Users.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<int>("RoleId");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            Email = "dummyadmin@bidding.lv",
                            FirstName = "Peteris",
                            LastName = "Liepins",
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            MiddleName = "Admin",
                            RoleId = 2,
                            UniqueIdentifier = ""
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            Email = "dummyuser@bidding.lv",
                            FirstName = "Peteris",
                            LastName = "Liepins",
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            MiddleName = "User",
                            RoleId = 1,
                            UniqueIdentifier = ""
                        });
                });

            modelBuilder.Entity("Bidding.Models.DatabaseModels.Bidding.Subscribe.Newsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<bool>("Estate");

                    b.Property<bool>("Items");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<bool>("Vehicles");

                    b.HasKey("Id");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("Bidding.Models.DatabaseModels.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Transports"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Manta"
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Nekustamais īpašums"
                        });
                });

            modelBuilder.Entity("Bidding.Models.DatabaseModels.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionCategoryId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("LastUpdatedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TypeId");

                    b.HasIndex("AuctionCategoryId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Vieglais transports līdz 3,5t"
                        },
                        new
                        {
                            TypeId = 2,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Traktortehnika"
                        },
                        new
                        {
                            TypeId = 3,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Kravas auto"
                        },
                        new
                        {
                            TypeId = 4,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Mototehnika"
                        },
                        new
                        {
                            TypeId = 5,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Piekabes"
                        },
                        new
                        {
                            TypeId = 6,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Ūdens transports"
                        },
                        new
                        {
                            TypeId = 7,
                            AuctionCategoryId = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Cits transports"
                        },
                        new
                        {
                            TypeId = 8,
                            AuctionCategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Biroja tehnika"
                        },
                        new
                        {
                            TypeId = 9,
                            AuctionCategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Elektrotehnika"
                        },
                        new
                        {
                            TypeId = 10,
                            AuctionCategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Rūpniecības tehnika"
                        },
                        new
                        {
                            TypeId = 11,
                            AuctionCategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Instrumenti"
                        },
                        new
                        {
                            TypeId = 12,
                            AuctionCategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Cita manta"
                        },
                        new
                        {
                            TypeId = 13,
                            AuctionCategoryId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Dzīvoklis"
                        },
                        new
                        {
                            TypeId = 14,
                            AuctionCategoryId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Māja"
                        },
                        new
                        {
                            TypeId = 15,
                            AuctionCategoryId = 3,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Deleted = false,
                            LastUpdatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = 1,
                            Name = "Zeme"
                        });
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Auction", b =>
                {
                    b.HasOne("Bidding.Models.DatabaseModels.Category", "Category")
                        .WithMany("Auctions")
                        .HasForeignKey("AuctionCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Auctions.AuctionStatus", "AuctionStatus")
                        .WithMany("Auctions")
                        .HasForeignKey("AuctionStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Models.DatabaseModels.Type", "Type")
                        .WithMany("Auctions")
                        .HasForeignKey("AuctionTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("Auctions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionCondition", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("AuctionConditions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionFormat", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("AuctionFormats")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionItem", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Auctions.Auction", "Auction")
                        .WithMany("AuctionItems")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Models.DatabaseModels.Category", "Category")
                        .WithMany("AuctionItems")
                        .HasForeignKey("AuctionItemCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Models.DatabaseModels.Type", "Type")
                        .WithMany("AuctionItems")
                        .HasForeignKey("AuctionItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("AuctionItems")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.AuctionStatus", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("AuctionStatuses")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Details.ItemAuctionDetails", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Auctions.AuctionItem", "AuctionItem")
                        .WithMany()
                        .HasForeignKey("AuctionItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("ItemAuctionDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Details.PropertyAuctionDetails", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Auctions.AuctionItem", "AuctionItem")
                        .WithMany()
                        .HasForeignKey("AuctionItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("PropertyAuctionDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Auctions.Details.VehicleAuctionDetails", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Auctions.AuctionItem", "AuctionItem")
                        .WithMany()
                        .HasForeignKey("AuctionItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("VehicleAuctionDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Users.Role", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Bidding.Database.DatabaseModels.Users.User", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Users.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bidding.Models.DatabaseModels.Category", b =>
                {
                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Bidding.Models.DatabaseModels.Type", b =>
                {
                    b.HasOne("Bidding.Models.DatabaseModels.Category", "Category")
                        .WithMany("Types")
                        .HasForeignKey("AuctionCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bidding.Database.DatabaseModels.Users.User", "User")
                        .WithMany("Types")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
