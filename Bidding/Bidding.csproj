<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>b57eaf8a-ceb8-4f70-9666-3ecd6356d3f6</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.5" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.3.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\auth\components\sign-in\**" />
    <Compile Remove="ClientApp\src\app\auth\models\**" />
    <Compile Remove="ClientApp\src\app\auth\services\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\auth\components\sign-in\**" />
    <Content Remove="ClientApp\src\app\auth\models\**" />
    <Content Remove="ClientApp\src\app\auth\services\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\src\app\auth\components\sign-in\**" />
    <EmbeddedResource Remove="ClientApp\src\app\auth\models\**" />
    <EmbeddedResource Remove="ClientApp\src\app\auth\services\**" />
    <None Remove="ClientApp\src\app\auth\components\sign-in\**" />
    <None Remove="ClientApp\src\app\auth\models\**" />
    <None Remove="ClientApp\src\app\auth\services\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Migrations\20181001163510_AddEstateCategoryToNewsletter.cs" />
    <Compile Remove="Migrations\20181001163510_AddEstateCategoryToNewsletter.Designer.cs" />
    <Compile Remove="Migrations\20181101191507_TestingDbQueries.cs" />
    <Compile Remove="Migrations\20181101191507_TestingDbQueries.Designer.cs" />
    <Compile Remove="Migrations\20181105190509_UpdateCategoriesTable.cs" />
    <Compile Remove="Migrations\20181105190509_UpdateCategoriesTable.Designer.cs" />
    <Compile Remove="Migrations\20181105190551_AddNameAndStatusToCategoriesTable.cs" />
    <Compile Remove="Migrations\20181105190551_AddNameAndStatusToCategoriesTable.Designer.cs" />
    <Compile Remove="Migrations\20181115194232_ImproveAuctionDetailsTable.cs" />
    <Compile Remove="Migrations\20181115194232_ImproveAuctionDetailsTable.Designer.cs" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\admin\containers\" />
    <Folder Include="ClientApp\src\app\admin\services\" />
    <Folder Include="ClientApp\src\app\auth\components\404-page-not-found\" />
    <Folder Include="ClientApp\src\app\shared\components\callback\" />
    <Folder Include="Shared\ErrorHandling\Validators\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="angular.json" />
    <None Include="package-lock.json" />
    <None Include="package.json" />
    <None Include="tsconfig.json" />
    <None Include="tslint.json" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
